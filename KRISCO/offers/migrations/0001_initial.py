# Generated by Django 3.1.4 on 2024-02-18 06:31

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(max_length=254)),
                ('cc_emails', models.TextField(blank=True, help_text='Comma-separated list of CC emails.')),
                ('bcc_emails', models.TextField(blank=True, help_text='Comma-separated list of BCC emails.')),
                ('subject', models.CharField(max_length=255)),
                ('sent_attachment', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(help_text='Success or Failure', max_length=50)),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed.')),
            ],
        ),
        migrations.CreateModel(
            name='Weekly_Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=200, unique=True)),
                ('upc', models.BigIntegerField()),
                ('description', models.CharField(max_length=600)),
                ('brand', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('Haircare', 'Haircare'), ('Skincare', 'Skincare'), ('Makeup', 'Makeup'), ('FMCG', 'FMCG'), ('Accessories', 'Accessories')], max_length=200)),
                ('available_qty', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('msrp', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('offer_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('required_quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Weekly Offer',
                'verbose_name_plural': 'Weekly Offers',
                'ordering': ['brand', 'category', '-offer_price'],
            },
        ),
        migrations.CreateModel(
            name='BrandOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('offer_type', models.CharField(choices=[('SALON', 'SALON'), ('REGULAR', 'REGULAR')], max_length=7)),
                ('offer_file', models.FileField(upload_to='offers/brandoffer/')),
                ('created_person_first_name', models.CharField(max_length=255)),
                ('created_person_last_name', models.CharField(max_length=255)),
                ('created_person_email', models.EmailField(max_length=254)),
                ('customer_rank', models.CharField(choices=[('DIAMOND', 'DIAMOND'), ('PLATINUM', 'PLATINUM'), ('GOLD', 'GOLD'), ('SILVER', 'SILVER'), ('BRONZE', 'BRONZE'), ('IN HOME', 'INHOME')], max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Brand Offer',
                'verbose_name_plural': 'Brand Offers',
            },
        ),
    ]
